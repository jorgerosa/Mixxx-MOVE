08:30:36: Creating resource group General
08:30:36: Creating resource group Internal
08:30:36: Creating resource group Autodetect
08:30:36: SceneManagerFactory for type 'DefaultSceneManager' registered.
08:30:36: Registering ResourceManager for type Material
08:30:36: Registering ResourceManager for type Mesh
08:30:36: Registering ResourceManager for type Skeleton
08:30:36: MovableObjectFactory for type 'ParticleSystem' registered.
08:30:36: OverlayElementFactory for type Panel registered.
08:30:36: OverlayElementFactory for type BorderPanel registered.
08:30:36: OverlayElementFactory for type TextArea registered.
08:30:36: Registering ResourceManager for type Font
08:30:36: ArchiveFactory for archive type FileSystem registered.
08:30:36: ArchiveFactory for archive type Zip registered.
08:30:36: ArchiveFactory for archive type EmbeddedZip registered.
08:30:36: DDS codec registering
08:30:36: FreeImage version: 3.15.3
08:30:36: This program uses FreeImage, a free, open source image library supporting all common bitmap formats. See http://freeimage.sourceforge.net for details
08:30:36: Supported formats: bmp,ico,jpg,jif,jpeg,jpe,jng,koa,iff,lbm,mng,pbm,pbm,pcd,pcx,pgm,pgm,png,ppm,ppm,ras,tga,targa,tif,tiff,wap,wbmp,wbm,psd,cut,xbm,xpm,gif,hdr,g3,sgi,exr,j2k,j2c,jp2,pfm,pct,pict,pic,3fr,arw,bay,bmq,cap,cine,cr2,crw,cs1,dc2,dcr,drf,dsc,dng,erf,fff,ia,iiq,k25,kc2,kdc,mdc,mef,mos,mrw,nef,nrw,orf,pef,ptx,pxn,qtk,raf,raw,rdc,rw2,rwl,rwz,sr2,srf,srw,sti
08:30:36: Registering ResourceManager for type HighLevelGpuProgram
08:30:36: Registering ResourceManager for type Compositor
08:30:36: MovableObjectFactory for type 'Entity' registered.
08:30:36: MovableObjectFactory for type 'Light' registered.
08:30:36: MovableObjectFactory for type 'BillboardSet' registered.
08:30:36: MovableObjectFactory for type 'ManualObject' registered.
08:30:36: MovableObjectFactory for type 'BillboardChain' registered.
08:30:36: MovableObjectFactory for type 'RibbonTrail' registered.
08:30:36: Loading library .\RenderSystem_GL
08:30:36: Installing plugin: GL RenderSystem
08:30:36: OpenGL Rendering Subsystem created.
08:30:36: Plugin successfully installed
08:30:36: Loading library .\Plugin_ParticleFX
08:30:36: Installing plugin: ParticleFX
08:30:36: Particle Emitter Type 'Point' registered
08:30:36: Particle Emitter Type 'Box' registered
08:30:36: Particle Emitter Type 'Ellipsoid' registered
08:30:36: Particle Emitter Type 'Cylinder' registered
08:30:36: Particle Emitter Type 'Ring' registered
08:30:36: Particle Emitter Type 'HollowEllipsoid' registered
08:30:36: Particle Affector Type 'LinearForce' registered
08:30:36: Particle Affector Type 'ColourFader' registered
08:30:36: Particle Affector Type 'ColourFader2' registered
08:30:36: Particle Affector Type 'ColourImage' registered
08:30:36: Particle Affector Type 'ColourInterpolator' registered
08:30:36: Particle Affector Type 'Scaler' registered
08:30:36: Particle Affector Type 'Rotator' registered
08:30:36: Particle Affector Type 'DirectionRandomiser' registered
08:30:36: Particle Affector Type 'DeflectorPlane' registered
08:30:36: Plugin successfully installed
08:30:36: *-*-* OGRE Initialising
08:30:36: *-*-* Version 1.8.1 (Byatis)
08:30:36: Creating resource group 
08:30:36: Added resource location './Data' of type 'FileSystem' to resource group ''
08:30:36: Added resource location './Data/Files' of type 'FileSystem' to resource group ''
08:30:36: Added resource location './Data/Fonts' of type 'FileSystem' to resource group ''
08:30:36: Added resource location './Data/3D-Logos' of type 'FileSystem' to resource group ''
08:30:36: Added resource location './Data/3D-Logos/bitmap' of type 'FileSystem' to resource group ''
08:30:36: Added resource location './Data/3D-Logos/material' of type 'FileSystem' to resource group ''
08:30:36: Added resource location './Data/3D-Logos/mesh' of type 'FileSystem' to resource group ''
08:30:36: Added resource location './Data/3D-Logos/program' of type 'FileSystem' to resource group ''
08:30:36: Added resource location './Data/3D-Scenes/Scene-001' of type 'FileSystem' to resource group ''
08:30:36: Added resource location './Data/3D-Scenes/Scene-001/bitmap' of type 'FileSystem' to resource group ''
08:30:36: Added resource location './Data/3D-Scenes/Scene-001/material' of type 'FileSystem' to resource group ''
08:30:36: Added resource location './Data/3D-Scenes/Scene-001/mesh' of type 'FileSystem' to resource group ''
08:30:37: Added resource location './Data/3D-Scenes/Scene-001/program' of type 'FileSystem' to resource group ''
08:30:37: CPU Identifier & Features
08:30:37: -------------------------
08:30:37:  *   CPU ID: AuthenticAMD: AMD A6-3500 APU with Radeon(tm) HD Graphics
08:30:37:  *      SSE: yes
08:30:37:  *     SSE2: yes
08:30:37:  *     SSE3: yes
08:30:37:  *      MMX: yes
08:30:37:  *   MMXEXT: yes
08:30:37:  *    3DNOW: yes
08:30:37:  * 3DNOWEXT: yes
08:30:37:  *     CMOV: yes
08:30:37:  *      TSC: yes
08:30:37:  *      FPU: yes
08:30:37:  *      PRO: yes
08:30:37:  *       HT: no
08:30:37: -------------------------
08:30:37: *** Starting Win32GL Subsystem ***
08:30:37: Registering ResourceManager for type Texture
08:30:37: GLRenderSystem::_createRenderWindow "MOVE - Mixxx Ogre3D Visual Effects", 600x480 windowed  miscParams: FSAA=6 FSAAHint= colourDepth=32 displayFrequency=0 gamma=false vsync=false vsyncInterval=1 
08:30:37: Created Win32Window 'MOVE - Mixxx Ogre3D Visual Effects' : 616x518, 32bpp
08:30:37: GL_VERSION = 4.5.0 NVIDIA 368.39
08:30:37: GL_VENDOR = NVIDIA Corporation
08:30:37: GL_RENDERER = GeForce GTX 670/PCIe/SSE2
08:30:37: GL_EXTENSIONS = GL_AMD_multi_draw_indirect GL_AMD_seamless_cubemap_per_texture GL_ARB_arrays_of_arrays GL_ARB_base_instance GL_ARB_bindless_texture GL_ARB_blend_func_extended GL_ARB_buffer_storage GL_ARB_clear_buffer_object GL_ARB_clear_texture GL_ARB_clip_control GL_ARB_color_buffer_float GL_ARB_compatibility GL_ARB_compressed_texture_pixel_storage GL_ARB_conservative_depth GL_ARB_compute_shader GL_ARB_compute_variable_group_size GL_ARB_conditional_render_inverted GL_ARB_copy_buffer GL_ARB_copy_image GL_ARB_cull_distance GL_ARB_debug_output GL_ARB_depth_buffer_float GL_ARB_depth_clamp GL_ARB_depth_texture GL_ARB_derivative_control GL_ARB_direct_state_access GL_ARB_draw_buffers GL_ARB_draw_buffers_blend GL_ARB_draw_indirect GL_ARB_draw_elements_base_vertex GL_ARB_draw_instanced GL_ARB_enhanced_layouts GL_ARB_ES2_compatibility GL_ARB_ES3_compatibility GL_ARB_ES3_1_compatibility GL_ARB_ES3_2_compatibility GL_ARB_explicit_attrib_location GL_ARB_explicit_uniform_location GL_ARB_fragment_coord_conventions GL_ARB_fragment_layer_viewport GL_ARB_fragment_program GL_ARB_fragment_program_shadow GL_ARB_fragment_shader GL_ARB_framebuffer_no_attachments GL_ARB_framebuffer_object GL_ARB_framebuffer_sRGB GL_ARB_geometry_shader4 GL_ARB_get_program_binary GL_ARB_get_texture_sub_image GL_ARB_gpu_shader5 GL_ARB_gpu_shader_fp64 GL_ARB_gpu_shader_int64 GL_ARB_half_float_pixel GL_ARB_half_float_vertex GL_ARB_imaging GL_ARB_indirect_parameters GL_ARB_instanced_arrays GL_ARB_internalformat_query GL_ARB_internalformat_query2 GL_ARB_invalidate_subdata GL_ARB_map_buffer_alignment GL_ARB_map_buffer_range GL_ARB_multi_bind GL_ARB_multi_draw_indirect GL_ARB_multisample GL_ARB_multitexture GL_ARB_occlusion_query GL_ARB_occlusion_query2 GL_ARB_parallel_shader_compile GL_ARB_pipeline_statistics_query GL_ARB_pixel_buffer_object GL_ARB_point_parameters GL_ARB_point_sprite GL_ARB_program_interface_query GL_ARB_provoking_vertex GL_ARB_query_buffer_object GL_ARB_robust_buffer_access_behavior GL_ARB_robustness GL_ARB_sample_shading GL_ARB_sampler_objects GL_ARB_seamless_cube_map GL_ARB_seamless_cubemap_per_texture GL_ARB_separate_shader_objects GL_ARB_shader_atomic_counter_ops GL_ARB_shader_atomic_counters GL_ARB_shader_ballot GL_ARB_shader_bit_encoding GL_ARB_shader_clock GL_ARB_shader_draw_parameters GL_ARB_shader_group_vote GL_ARB_shader_image_load_store GL_ARB_shader_image_size GL_ARB_shader_objects GL_ARB_shader_precision GL_ARB_shader_storage_buffer_object GL_ARB_shader_subroutine GL_ARB_shader_texture_image_samples GL_ARB_shader_texture_lod GL_ARB_shading_language_100 GL_ARB_shading_language_420pack GL_ARB_shading_language_include GL_ARB_shading_language_packing GL_ARB_shadow GL_ARB_sparse_buffer GL_ARB_sparse_texture GL_ARB_stencil_texturing GL_ARB_sync GL_ARB_tessellation_shader GL_ARB_texture_barrier GL_ARB_texture_border_clamp GL_ARB_texture_buffer_object GL_ARB_texture_buffer_object_rgb32 GL_ARB_texture_buffer_range GL_ARB_texture_compression GL_ARB_texture_compression_bptc GL_ARB_texture_compression_rgtc GL_ARB_texture_cube_map GL_ARB_texture_cube_map_array GL_ARB_texture_env_add GL_ARB_texture_env_combine GL_ARB_texture_env_crossbar GL_ARB_texture_env_dot3 GL_ARB_texture_float GL_ARB_texture_gather GL_ARB_texture_mirror_clamp_to_edge GL_ARB_texture_mirrored_repeat GL_ARB_texture_multisample GL_ARB_texture_non_power_of_two GL_ARB_texture_query_levels GL_ARB_texture_query_lod GL_ARB_texture_rectangle GL_ARB_texture_rg GL_ARB_texture_rgb10_a2ui GL_ARB_texture_stencil8 GL_ARB_texture_storage GL_ARB_texture_storage_multisample GL_ARB_texture_swizzle GL_ARB_texture_view GL_ARB_timer_query GL_ARB_transform_feedback2 GL_ARB_transform_feedback3 GL_ARB_transform_feedback_instanced GL_ARB_transform_feedback_overflow_query GL_ARB_transpose_matrix GL_ARB_uniform_buffer_object GL_ARB_vertex_array_bgra GL_ARB_vertex_array_object GL_ARB_vertex_attrib_64bit GL_ARB_vertex_attrib_binding GL_ARB_vertex_buffer_object GL_ARB_vertex_program GL_ARB_vertex_shader GL_ARB_vertex_type_10f_11f_11f_rev GL_ARB_vertex_type_2_10_10_10_rev GL_ARB_viewport_array GL_ARB_window_pos GL_ATI_draw_buffers GL_ATI_texture_float GL_ATI_texture_mirror_once GL_S3_s3tc GL_EXT_texture_env_add GL_EXT_abgr GL_EXT_bgra GL_EXT_bindable_uniform GL_EXT_blend_color GL_EXT_blend_equation_separate GL_EXT_blend_func_separate GL_EXT_blend_minmax GL_EXT_blend_subtract GL_EXT_compiled_vertex_array GL_EXT_Cg_shader GL_EXT_depth_bounds_test GL_EXT_direct_state_access GL_EXT_draw_buffers2 GL_EXT_draw_instanced GL_EXT_draw_range_elements GL_EXT_fog_coord GL_EXT_framebuffer_blit GL_EXT_framebuffer_multisample GL_EXTX_framebuffer_mixed_formats GL_EXT_framebuffer_multisample_blit_scaled GL_EXT_framebuffer_object GL_EXT_framebuffer_sRGB GL_EXT_geometry_shader4 GL_EXT_gpu_program_parameters GL_EXT_gpu_shader4 GL_EXT_multi_draw_arrays GL_EXT_packed_depth_stencil GL_EXT_packed_float GL_EXT_packed_pixels GL_EXT_pixel_buffer_object GL_EXT_point_parameters GL_EXT_polygon_offset_clamp GL_EXT_provoking_vertex GL_EXT_rescale_normal GL_EXT_secondary_color GL_EXT_separate_shader_objects GL_EXT_separate_specular_color GL_EXT_shader_image_load_store GL_EXT_shader_integer_mix GL_EXT_shadow_funcs GL_EXT_stencil_two_side GL_EXT_stencil_wrap GL_EXT_texture3D GL_EXT_texture_array GL_EXT_texture_buffer_object GL_EXT_texture_compression_dxt1 GL_EXT_texture_compression_latc GL_EXT_texture_compression_rgtc GL_EXT_texture_compression_s3tc GL_EXT_texture_cube_map GL_EXT_texture_edge_clamp GL_EXT_texture_env_combine GL_EXT_texture_env_dot3 GL_EXT_texture_filter_anisotropic GL_EXT_texture_integer GL_EXT_texture_lod GL_EXT_texture_lod_bias GL_EXT_texture_mirror_clamp GL_EXT_texture_object GL_EXT_texture_shared_exponent GL_EXT_texture_sRGB GL_EXT_texture_sRGB_decode GL_EXT_texture_storage GL_EXT_texture_swizzle GL_EXT_timer_query GL_EXT_transform_feedback2 GL_EXT_vertex_array GL_EXT_vertex_array_bgra GL_EXT_vertex_attrib_64bit GL_EXT_import_sync_object GL_IBM_rasterpos_clip GL_IBM_texture_mirrored_repeat GL_KHR_context_flush_control GL_KHR_debug GL_KHR_no_error GL_KHR_robust_buffer_access_behavior GL_KHR_robustness GL_KTX_buffer_region GL_NV_bindless_multi_draw_indirect GL_NV_bindless_multi_draw_indirect_count GL_NV_bindless_texture GL_NV_blend_equation_advanced GL_NV_blend_square GL_NV_command_list GL_NV_compute_program5 GL_NV_conditional_render GL_NV_copy_depth_to_color GL_NV_copy_image GL_NV_depth_buffer_float GL_NV_depth_clamp GL_NV_draw_texture GL_NV_draw_vulkan_image GL_NV_ES1_1_compatibility GL_NV_ES3_1_compatibility GL_NV_explicit_multisample GL_NV_fence GL_NV_float_buffer GL_NV_fog_distance GL_NV_fragment_program GL_NV_fragment_program_option GL_NV_fragment_program2 GL_NV_framebuffer_multisample_coverage GL_NV_geometry_shader4 GL_NV_gpu_program4 GL_NV_internalformat_sample_query GL_NV_gpu_program4_1 GL_NV_gpu_program5 GL_NV_gpu_program5_mem_extended GL_NV_gpu_program_fp64 GL_NV_gpu_shader5 GL_NV_half_float GL_NV_light_max_exponent GL_NV_multisample_coverage GL_NV_multisample_filter_hint GL_NV_occlusion_query GL_NV_packed_depth_stencil GL_NV_parameter_buffer_object GL_NV_parameter_buffer_object2 GL_NV_path_rendering GL_NV_pixel_data_range GL_NV_point_sprite GL_NV_primitive_restart GL_NV_register_combiners GL_NV_register_combiners2 GL_NV_shader_atomic_counters GL_NV_shader_atomic_float GL_NV_shader_buffer_load GL_NV_shader_storage_buffer_object GL_NV_texgen_reflection GL_NV_texture_barrier GL_NV_texture_compression_vtc GL_NV_texture_env_combine4 GL_NV_texture_multisample GL_NV_texture_rectangle GL_NV_texture_shader GL_NV_texture_shader2 GL_NV_texture_shader3 GL_NV_transform_feedback GL_NV_transform_feedback2 GL_NV_uniform_buffer_unified_memory GL_NV_vertex_array_range GL_NV_vertex_array_range2 GL_NV_vertex_attrib_integer_64bit GL_NV_vertex_buffer_unified_memory GL_NV_vertex_program GL_NV_vertex_program1_1 GL_NV_vertex_program2 GL_NV_vertex_program2_option GL_NV_vertex_program3 GL_NVX_conditional_render GL_NVX_gpu_memory_info GL_NVX_multigpu_info GL_NVX_nvenc_interop GL_NV_shader_thread_group GL_NV_shader_thread_shuffle GL_KHR_blend_equation_advanced GL_SGIS_generate_mipmap GL_SGIS_texture_lod GL_SGIX_depth_texture GL_SGIX_shadow GL_SUN_slice_accum GL_WIN_swap_hint WGL_EXT_swap_control 
08:30:37: Supported WGL extensions: WGL_ARB_buffer_region WGL_ARB_create_context WGL_ARB_create_context_profile WGL_ARB_create_context_robustness WGL_ARB_context_flush_control WGL_ARB_extensions_string WGL_ARB_make_current_read WGL_ARB_multisample WGL_ARB_pbuffer WGL_ARB_pixel_format WGL_ARB_pixel_format_float WGL_ARB_render_texture WGL_ATI_pixel_format_float WGL_EXT_create_context_es_profile WGL_EXT_create_context_es2_profile WGL_EXT_extensions_string WGL_EXT_framebuffer_sRGB WGL_EXT_pixel_format_packed_float WGL_EXT_swap_control WGL_EXT_swap_control_tear WGL_NVX_DX_interop WGL_NV_DX_interop WGL_NV_DX_interop2 WGL_NV_bridged_display WGL_NV_copy_image WGL_NV_delay_before_swap WGL_NV_float_buffer WGL_NV_multisample_coverage WGL_NV_render_depth_texture WGL_NV_render_texture_rectangle 
08:30:37: ***************************
08:30:37: *** GL Renderer Started ***
08:30:37: ***************************
08:30:37: Registering ResourceManager for type GpuProgram
08:30:37: GLSL support detected
08:30:37: GL: Using GL_EXT_framebuffer_object for rendering to textures (best)
08:30:37: FBO PF_UNKNOWN depth/stencil support: D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
08:30:37: FBO PF_L8 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
08:30:37: FBO PF_A8 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
08:30:37: FBO PF_A4L4 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
08:30:37: FBO PF_BYTE_LA depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
08:30:37: FBO PF_R5G6B5 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
08:30:37: FBO PF_B5G6R5 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
08:30:37: FBO PF_A4R4G4B4 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
08:30:37: FBO PF_A1R5G5B5 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
08:30:37: FBO PF_R8G8B8 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
08:30:37: FBO PF_B8G8R8 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
08:30:37: FBO PF_A8R8G8B8 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
08:30:37: FBO PF_B8G8R8A8 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
08:30:37: FBO PF_A2R10G10B10 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
08:30:37: FBO PF_A2B10G10R10 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
08:30:37: FBO PF_FLOAT16_RGB depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
08:30:37: FBO PF_FLOAT16_RGBA depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
08:30:37: FBO PF_FLOAT32_RGB depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
08:30:37: FBO PF_FLOAT32_RGBA depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
08:30:37: FBO PF_X8R8G8B8 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
08:30:37: FBO PF_X8B8G8R8 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
08:30:37: FBO PF_SHORT_RGBA depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
08:30:37: FBO PF_R3G3B2 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
08:30:37: FBO PF_FLOAT16_R depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
08:30:37: FBO PF_FLOAT32_R depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
08:30:38: FBO PF_FLOAT16_GR depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
08:30:38: FBO PF_FLOAT32_GR depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
08:30:38: FBO PF_SHORT_RGB depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
08:30:38: [GL] : Valid FBO targets PF_UNKNOWN PF_L8 PF_A8 PF_A4L4 PF_BYTE_LA PF_R5G6B5 PF_B5G6R5 PF_A4R4G4B4 PF_A1R5G5B5 PF_R8G8B8 PF_B8G8R8 PF_A8R8G8B8 PF_B8G8R8A8 PF_A2R10G10B10 PF_A2B10G10R10 PF_FLOAT16_RGB PF_FLOAT16_RGBA PF_FLOAT32_RGB PF_FLOAT32_RGBA PF_X8R8G8B8 PF_X8B8G8R8 PF_SHORT_RGBA PF_R3G3B2 PF_FLOAT16_R PF_FLOAT32_R PF_FLOAT16_GR PF_FLOAT32_GR PF_SHORT_RGB 
08:30:38: RenderSystem capabilities
08:30:38: -------------------------
08:30:38: RenderSystem Name: OpenGL Rendering Subsystem
08:30:38: GPU Vendor: nvidia
08:30:38: Device Name: GeForce GTX 670/PCIe/SSE2
08:30:38: Driver Version: 4.5.0.0
08:30:38:  * Fixed function pipeline: yes
08:30:38:  * Hardware generation of mipmaps: yes
08:30:38:  * Texture blending: yes
08:30:38:  * Anisotropic texture filtering: yes
08:30:38:  * Dot product texture operation: yes
08:30:38:  * Cube mapping: yes
08:30:38:  * Hardware stencil buffer: yes
08:30:38:    - Stencil depth: 8
08:30:38:    - Two sided stencil support: yes
08:30:38:    - Wrap stencil values: yes
08:30:38:  * Hardware vertex / index buffers: yes
08:30:38:  * Vertex programs: yes
08:30:38:  * Number of floating-point constants for vertex programs: 1024
08:30:38:  * Number of integer constants for vertex programs: 0
08:30:38:  * Number of boolean constants for vertex programs: 0
08:30:38:  * Fragment programs: yes
08:30:38:  * Number of floating-point constants for fragment programs: 1024
08:30:38:  * Number of integer constants for fragment programs: 0
08:30:38:  * Number of boolean constants for fragment programs: 0
08:30:38:  * Geometry programs: yes
08:30:38:  * Number of floating-point constants for geometry programs: 2048
08:30:38:  * Number of integer constants for geometry programs: 0
08:30:38:  * Number of boolean constants for geometry programs: 0
08:30:38:  * Supported Shader Profiles: arbfp1 arbvp1 fp20 fp30 fp40 glsl gp4fp gp4gp gp4vp gpu_fp gpu_gp gpu_vp nvgp4 vp30 vp40
08:30:38:  * Texture Compression: yes
08:30:38:    - DXT: yes
08:30:38:    - VTC: yes
08:30:38:    - PVRTC: no
08:30:38:  * Scissor Rectangle: yes
08:30:38:  * Hardware Occlusion Query: yes
08:30:38:  * User clip planes: yes
08:30:38:  * VET_UBYTE4 vertex element type: yes
08:30:38:  * Infinite far plane projection: yes
08:30:38:  * Hardware render-to-texture: yes
08:30:38:  * Floating point textures: yes
08:30:38:  * Non-power-of-two textures: yes
08:30:38:  * Volume textures: yes
08:30:38:  * Multiple Render Targets: 8
08:30:38:    - With different bit depths: yes
08:30:38:  * Point Sprites: yes
08:30:38:  * Extended point parameters: yes
08:30:38:  * Max Point Size: 2047
08:30:38:  * Vertex texture fetch: yes
08:30:38:  * Number of world matrices: 0
08:30:38:  * Number of texture units: 32
08:30:38:  * Stencil buffer depth: 8
08:30:38:  * Number of vertex blend matrices: 0
08:30:38:    - Max vertex textures: 32
08:30:38:    - Vertex textures shared: yes
08:30:38:  * Render to Vertex Buffer : yes
08:30:38:  * GL 1.5 without VBO workaround: no
08:30:38:  * Frame Buffer objects: yes
08:30:38:  * Frame Buffer objects (ARB extension): no
08:30:38:  * Frame Buffer objects (ATI extension): no
08:30:38:  * PBuffer support: yes
08:30:38:  * GL 1.5 without HW-occlusion workaround: no
08:30:38:  * Separate shader objects: no
08:30:38: Using FSAA from GL_ARB_multisample extension.
08:30:38: DefaultWorkQueue('Root') initialising on thread 4664.
08:30:38: DefaultWorkQueue('Root')::WorkerFunc - thread 7388 starting.
08:30:38: DefaultWorkQueue('Root')::WorkerFunc - thread c404 starting.
08:30:38: Particle Renderer Type 'billboard' registered
08:30:38: DefaultWorkQueue('Root')::WorkerFunc - thread 930c starting.
08:30:38: Parsing scripts for resource group 
08:30:38: Parsing script custom.material
08:30:38: Parsing script logo-jdark.material
08:30:38: Parsing script logo-mixxx.material
08:30:38: Parsing script custom.material
08:30:38: Parsing script scene-001.material
08:30:38: Parsing script particles.particle
08:30:38: Parsing script fonts.fontdef
08:30:38: Finished parsing scripts for resource group 
08:30:38: Creating resources for group 
08:30:38: All done
08:30:38: Parsing scripts for resource group Autodetect
08:30:38: Finished parsing scripts for resource group Autodetect
08:30:38: Creating resources for group Autodetect
08:30:38: All done
08:30:38: Parsing scripts for resource group General
08:30:38: Finished parsing scripts for resource group General
08:30:38: Creating resources for group General
08:30:38: All done
08:30:38: Parsing scripts for resource group Internal
08:30:38: Finished parsing scripts for resource group Internal
08:30:38: Creating resources for group Internal
08:30:38: All done
08:30:38: [DotSceneLoader] Parsing dotScene file with version 1.0, min. Ogre version Latest version, author EasyOgreExporter
08:30:38: Mesh: Loading Logo_Mixxx.mesh.
08:30:38: Texture: logos.jpg: Loading 1 faces(PF_R8G8B8,500x250x1) with 2 generated mipmaps from Image. Internal format is PF_X8R8G8B8,500x250x1.
08:30:38: Texture: metal1.jpg: Loading 1 faces(PF_R8G8B8,500x250x1) with 2 generated mipmaps from Image. Internal format is PF_X8R8G8B8,500x250x1.
08:30:38: Texture: metal2.png: Loading 1 faces(PF_A8R8G8B8,500x250x1) with 2 generated mipmaps from Image. Internal format is PF_A8R8G8B8,500x250x1.
08:30:38: [DotSceneLoader] Parsing dotScene file with version 1.0, min. Ogre version Latest version, author EasyOgreExporter
08:30:38: Mesh: Loading Earth.mesh.
08:30:38: Texture: Earth.jpg: Loading 1 faces(PF_R8G8B8,800x400x1) with 2 generated mipmaps from Image. Internal format is PF_X8R8G8B8,800x400x1.
08:30:38: Mesh: Loading Moon.mesh.
08:30:38: Texture: Moon.jpg: Loading 1 faces(PF_R8G8B8,500x250x1) with 2 generated mipmaps from Image. Internal format is PF_X8R8G8B8,500x250x1.
08:30:38: Mesh: Loading Plane01.mesh.
08:30:38: Mesh: Loading Plane03.mesh.
08:30:38: Mesh: Loading Plane02.mesh.
08:30:38: Mesh: Loading Plane04.mesh.
08:30:38: Mesh: Loading Plane05.mesh.
08:30:38: Texture: earth.jpg: Loading 1 faces(PF_R8G8B8,800x400x1) with 2 generated mipmaps from Image. Internal format is PF_X8R8G8B8,800x400x1.
08:30:38: Texture: clouds.png: Loading 1 faces(PF_A8R8G8B8,500x375x1) with 2 generated mipmaps from Image. Internal format is PF_A8R8G8B8,500x375x1.
08:30:38: Texture: wave.png: Loading 1 faces(PF_A8R8G8B8,512x512x1) with 2 generated mipmaps from Image. Internal format is PF_A8R8G8B8,512x512x1.
08:30:39: Texture: moon.jpg: Loading 1 faces(PF_R8G8B8,500x250x1) with 2 generated mipmaps from Image. Internal format is PF_X8R8G8B8,500x250x1.
08:30:39: Texture: space.jpg: Loading 1 faces(PF_R8G8B8,1024x1024x1) with 2 generated mipmaps from Image. Internal format is PF_X8R8G8B8,1024x1024x1.
08:30:39: Texture: space.png: Loading 1 faces(PF_A8R8G8B8,1024x1024x1) with 2 generated mipmaps from Image. Internal format is PF_A8R8G8B8,1024x1024x1.
08:30:39: Texture: sun.png: Loading 1 faces(PF_A8R8G8B8,64x64x1) with 2 generated mipmaps from Image. Internal format is PF_A8R8G8B8,64x64x1.
08:30:39: Texture: atmosphere.png: Loading 1 faces(PF_A8R8G8B8,64x64x1) with 2 generated mipmaps from Image. Internal format is PF_A8R8G8B8,64x64x1.
08:30:39: Texture: peaks.png: Loading 1 faces(PF_A8R8G8B8,64x64x1) with 2 generated mipmaps from Image. Internal format is PF_A8R8G8B8,64x64x1.
08:30:39: Texture: spot_shadow_fade.png: Loading 1 faces(PF_R8G8B8,128x128x1) with 2 generated mipmaps from Image. Internal format is PF_X8R8G8B8,128x128x1.
08:30:39: Font CabinMedium using texture size 2048x1024
08:30:39: Info: Freetype returned null for character 160 in font CabinMedium
08:30:39: Info: Freetype returned null for character 32 in font CabinMedium
08:30:39: Info: Freetype returned null for character 160 in font CabinMedium
08:30:39: Texture: CabinMediumTexture: Loading 1 faces(PF_BYTE_LA,2048x1024x1) with 0 generated mipmaps from Image. Internal format is PF_BYTE_LA,2048x1024x1.
08:30:39: Texture: stars.png: Loading 1 faces(PF_A8R8G8B8,64x64x1) with 2 generated mipmaps from Image. Internal format is PF_A8R8G8B8,64x64x1.
